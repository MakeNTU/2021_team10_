/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase() :
    interaction2Counter(0),
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    background.setPosition(0, 0, 480, 272);
    background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 203, 255));

    bulb.setXY(134, 11);
    bulb.setBitmap(touchgfx::Bitmap(BITMAP_BULB_OFF_ID));

    power_button.setXY(176, 234);
    power_button.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    power_button.setAction(buttonCallback);

    Lp1.setXY(51, 84);
    Lp1.setProgressIndicatorPosition(0, 0, 104, 104);
    Lp1.setRange(0, 100, 89, 0);
    Lp1.setCenter(52, 52);
    Lp1.setRadius(50);
    Lp1.setLineWidth(0);
    Lp1.setStartEndAngle(0, 360);
    Lp1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID));
    Lp1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(253, 0, 0));
    Lp1.setPainter(Lp1Painter);
    Lp1.setValue(3);

    add(background);
    add(bulb);
    add(power_button);
    add(Lp1);
}

void Screen1ViewBase::setupScreen()
{

}

//Handles delays
void Screen1ViewBase::handleTickEvent()
{
    if(interaction2Counter > 0)
    {
        interaction2Counter--;
        if(interaction2Counter == 0)
        {
            //Interaction3
            //When Interaction2 completed execute C++ code
            //Execute C++ code
            presenter->changeColor();
        }
    }
}

//Handles when a key is pressed
void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
    if(4 == key)
    {
        //Interaction4
        //When hardware button 4 clicked change color of background
        //Set RGB color R:249, G:255, B:0 on background
        background.setColor(touchgfx::Color::getColorFrom24BitRGB(249,255,0));
        background.invalidate();
    }
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &power_button)
    {
        //Interaction1
        //When power_button clicked execute C++ code
        //Execute C++ code
        presenter->toggleLight();

        //Interaction2
        //When Interaction1 completed delay
        //Delay for 100 ms (6 Ticks)
        interaction2Counter = INTERACTION2_DURATION;
    }
}
